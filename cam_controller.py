# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GPS_Logging_GUI.ui'
#
# Created by: PyQt5 UI code generator 5.15.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import sys
from datetime import datetime as dt
import passive_cam
import active_cam

#subclass of mainwindow to customize application main window
class UI_MainWindow(QtWidgets.QMainWindow):

    def __init__(self,*args,**kwargs):
        
        #inherit all attributes from QMainWindow parent
        super(UI_MainWindow,self).__init__(*args,**kwargs)

        self.resize(370, 262)
        self.setWindowTitle("MainWindow")


        self.centralwidget = QtWidgets.QWidget(self)
        self.centralwidget.setObjectName("centralwidget")
        
        
        self.passive_cam = QtWidgets.QPushButton(self.centralwidget)
        self.passive_cam.setGeometry(QtCore.QRect(73, 52, 80, 73))
        font = QtGui.QFont()
        font.setPointSize(6)
        self.passive_cam.setFont(font)
        self.passive_cam.setObjectName("passive_cam")
        self.passive_cam.setStyleSheet("background-color : yellow")
        
        
        self.active_cam = QtWidgets.QPushButton(self.centralwidget)
        self.active_cam.setGeometry(QtCore.QRect(189, 52, 80, 73))
        font = QtGui.QFont()
        font.setPointSize(6)
        self.active_cam.setFont(font)
        self.active_cam.setObjectName("active_cam")
        self.active_cam.setStyleSheet("background-color : yellow")
        
        
        self.current_mode_label = QtWidgets.QLabel(self.centralwidget)
        self.current_mode_label.setGeometry(QtCore.QRect(280, 3, 87, 14))
        font = QtGui.QFont()
        font.setPointSize(6)
        self.current_mode_label.setFont(font)
        self.current_mode_label.setObjectName("current_mode_label")
        self.current_mode_label.setStyleSheet("background-color : yellow")

        self.TimeStamp_label = QtWidgets.QLabel(self.centralwidget)
        self.TimeStamp_label.setGeometry(QtCore.QRect(280, 175, 87, 14))
        font = QtGui.QFont()
        font.setPointSize(6)
        self.TimeStamp_label.setFont(font)
        self.TimeStamp_label.setObjectName("TimeStamp_label")
        
        self.ellapsed_time_label = QtWidgets.QLabel(self.centralwidget)
        self.ellapsed_time_label.setGeometry(QtCore.QRect(280, 210, 87, 14))
        font = QtGui.QFont()
        font.setPointSize(6)
        self.ellapsed_time_label.setFont(font)
        self.ellapsed_time_label.setObjectName("Ellapsed_Time_label")
        
        self.status_indicator = QtWidgets.QLabel(self.centralwidget)
        self.status_indicator.setGeometry(QtCore.QRect(101, 182, 126, 31))
        font = QtGui.QFont()
        font.setPointSize(6)
        self.status_indicator.setFont(font)
        self.status_indicator.setObjectName("status_indicator")
        
        #enable widgets in the main window
        self.setCentralWidget(self.centralwidget)
        
        self.passive_clicked = 0
        self.active_clicked = 0
        
        self.retranslateUi()

        #matches action signals like button clicks to Widget objects
        QtCore.QMetaObject.connectSlotsByName(self)

    def retranslateUi(self):
        _translate = QtCore.QCoreApplication.translate
        self.setWindowTitle(_translate("MainWindow", "Camera App"))
        self.passive_cam.setText(_translate("MainWindow", "Camera Passive"))
        self.active_cam.setText(_translate("MainWindow", "Camera Active"))
        self.current_mode_label.setText(_translate("MainWindow", "Current Mode"))
        self.status_indicator.setText(_translate("MainWindow", "Connecting..."))

    @QtCore.pyqtSlot()
    def on_passive_cam_clicked(self):
        print("Start")
        self.status_indicator.setText("Passive Camera On")
        self.status_indicator.adjustSize()
        
        self.current_mode_label.setText("Passive Camera On")
        self.current_mode_label.adjustSize()

        self.active_cam.setStyleSheet("background-color : yellow")
        self.passive_cam.setStyleSheet("background-color : green")

        self.current_mode_label.setStyleSheet("background-color : green")
        
        self.active_clicked = 0
        
        if (self.passive_clicked == 0):
            self.passive_clicked = 1
            self.passive_cam_obj = passive_cam.Passive_Cam( passive_cam.PIR, passive_cam.DHT_pin, passive_cam.PB, passive_cam.MODE_SWITCH_PB )
            self.passive_cam_obj.roll()
            self.passive_clicked = 0

    @QtCore.pyqtSlot()
    def on_active_cam_clicked(self):
        print("Stop")
        self.status_indicator.setText("Active Camera On")
        self.status_indicator.adjustSize()
        
        self.current_mode_label.setText("Active Camera On")
        self.current_mode_label.adjustSize()

        self.active_cam.setStyleSheet("background-color : green")
        self.passive_cam.setStyleSheet("background-color : yellow")

        self.current_mode_label.setStyleSheet("background-color : yellow")
        
        
        if (self.active_clicked == 0):
            self.active_clicked = 1
            self.active_cam_obj = active_cam.live_stream()
            self.active_cam_obj.roll()
            self.active_clicked = 0

if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)

    ui = UI_MainWindow()
    ui.show()

    sys.exit(app.exec_())
    
    